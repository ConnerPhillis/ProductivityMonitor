// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductivityMonitor.Service.Data;

namespace ProductivityMonitor.Service.Migrations
{
    [DbContext(typeof(ProductivityMonitorDbContext))]
    partial class ProductivityMonitorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("ProductivityMonitor.Service.Data.Models.ApplicationRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pid")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ApplicationRecords");
                });

            modelBuilder.Entity("ProductivityMonitor.Service.Data.Models.KeyboardInputRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActiveApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KeyPressed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ActiveApplicationId");

                    b.ToTable("KeyboardInputRecords");
                });

            modelBuilder.Entity("ProductivityMonitor.Service.Data.Models.MouseInputRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ActiveApplicationId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsClick")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("XPosition")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YPosition")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ActiveApplicationId");

                    b.ToTable("MouseInputRecords");
                });

            modelBuilder.Entity("ProductivityMonitor.Service.Data.Models.KeyboardInputRecord", b =>
                {
                    b.HasOne("ProductivityMonitor.Service.Data.Models.ApplicationRecord", "ActiveApplication")
                        .WithMany("KeyboardInputs")
                        .HasForeignKey("ActiveApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductivityMonitor.Service.Data.Models.MouseInputRecord", b =>
                {
                    b.HasOne("ProductivityMonitor.Service.Data.Models.ApplicationRecord", "ActiveApplication")
                        .WithMany("MouseInputs")
                        .HasForeignKey("ActiveApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
